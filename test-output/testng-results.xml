<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="23" passed="20" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-13T12:30:17 IST" name="APITestSuite" finished-at="2025-08-13T12:30:26 IST" duration-ms="9320">
    <groups>
    </groups>
    <test started-at="2025-08-13T12:30:17 IST" name="AuthTests" finished-at="2025-08-13T12:30:20 IST" duration-ms="3752">
      <class name="tests.AuthTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.AuthTests@333d4a8c]" started-at="2025-08-13T12:30:17 IST" name="setup" finished-at="2025-08-13T12:30:18 IST" duration-ms="906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="twoStepAuth_statusCode200()[pri:1, instance:tests.AuthTests@333d4a8c]" started-at="2025-08-13T12:30:18 IST" name="twoStepAuth_statusCode200" finished-at="2025-08-13T12:30:20 IST" duration-ms="2488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoStepAuth_statusCode200 -->
        <test-method signature="twoStepAuth_authCodeNotNull()[pri:2, instance:tests.AuthTests@333d4a8c]" started-at="2025-08-13T12:30:20 IST" name="twoStepAuth_authCodeNotNull" finished-at="2025-08-13T12:30:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoStepAuth_authCodeNotNull -->
        <test-method signature="tokenRequest_statusCode200()[pri:3, instance:tests.AuthTests@333d4a8c]" started-at="2025-08-13T12:30:20 IST" name="tokenRequest_statusCode200" finished-at="2025-08-13T12:30:20 IST" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tokenRequest_statusCode200 -->
        <test-method signature="tokenRequest_accessTokenNotNull()[pri:4, instance:tests.AuthTests@333d4a8c]" started-at="2025-08-13T12:30:20 IST" name="tokenRequest_accessTokenNotNull" finished-at="2025-08-13T12:30:20 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tokenRequest_accessTokenNotNull -->
      </class> <!-- tests.AuthTests -->
    </test> <!-- AuthTests -->
    <test started-at="2025-08-13T12:30:21 IST" name="RoomServiceTests" finished-at="2025-08-13T12:30:26 IST" duration-ms="5113">
      <class name="tests.RoomServiceTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:21 IST" name="setup" finished-at="2025-08-13T12:30:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="viewRoomList_status200()[pri:1, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:21 IST" name="viewRoomList_status200" finished-at="2025-08-13T12:30:21 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomList_status200 -->
        <test-method signature="viewRoomList_responseTimeBelow2s()[pri:2, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:21 IST" name="viewRoomList_responseTimeBelow2s" finished-at="2025-08-13T12:30:21 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomList_responseTimeBelow2s -->
        <test-method signature="viewRoomList_bodyNotEmpty()[pri:3, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:21 IST" name="viewRoomList_bodyNotEmpty" finished-at="2025-08-13T12:30:22 IST" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomList_bodyNotEmpty -->
        <test-method signature="viewRoomList_bodyIsEmpty_Fail()[pri:4, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:22 IST" name="viewRoomList_bodyIsEmpty_Fail" finished-at="2025-08-13T12:30:22 IST" duration-ms="248" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Intentional fail - body is expected null expected [null] but found [[{"roomId":101,"hotelId":"H2001","roomType":"SINGLE","roomStatus":"AVAILABLE","roomPrice":1200.0},{"roomId":301,"hotelId":"H2001","roomType":"DELUXE","roomStatus":"NOTAVAILABLE","roomPrice":5000.0},{"roomId":701,"hotelId":"H2001","roomType":"DOUBLE","roomStatus":"AVAILABLE","roomPrice":5500.0}]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Intentional fail - body is expected null expected [null] but found [[{"roomId":101,"hotelId":"H2001","roomType":"SINGLE","roomStatus":"AVAILABLE","roomPrice":1200.0},{"roomId":301,"hotelId":"H2001","roomType":"DELUXE","roomStatus":"NOTAVAILABLE","roomPrice":5000.0},{"roomId":701,"hotelId":"H2001","roomType":"DOUBLE","roomStatus":"AVAILABLE","roomPrice":5500.0}]]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotSame(Assert.java:1409)
at org.testng.Assert.assertNull(Assert.java:1342)
at tests.RoomServiceTests.viewRoomList_bodyIsEmpty_Fail(RoomServiceTests.java:60)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomList_bodyIsEmpty_Fail -->
        <test-method signature="viewRoomById_status200()[pri:5, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:22 IST" name="viewRoomById_status200" finished-at="2025-08-13T12:30:22 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomById_status200 -->
        <test-method signature="viewRoomById_responseTimeBelow2s()[pri:6, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:22 IST" name="viewRoomById_responseTimeBelow2s" finished-at="2025-08-13T12:30:22 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomById_responseTimeBelow2s -->
        <test-method signature="viewRoomById_contains101()[pri:7, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:22 IST" name="viewRoomById_contains101" finished-at="2025-08-13T12:30:23 IST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomById_contains101 -->
        <test-method signature="viewRoomByType_status200()[pri:8, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:23 IST" name="viewRoomByType_status200" finished-at="2025-08-13T12:30:23 IST" duration-ms="280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomByType_status200 -->
        <test-method signature="viewRoomByType_matchesType(java.lang.String)[pri:9, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:23 IST" name="viewRoomByType_matchesType" data-provider="roomTypes" finished-at="2025-08-13T12:30:24 IST" duration-ms="267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DOUBLE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomByType_matchesType -->
        <test-method signature="viewRoomByType_matchesType(java.lang.String)[pri:9, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:24 IST" name="viewRoomByType_matchesType" data-provider="roomTypes" finished-at="2025-08-13T12:30:24 IST" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SINGLE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomByType_matchesType -->
        <test-method signature="viewRoomByType_matchesType(java.lang.String)[pri:9, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:24 IST" name="viewRoomByType_matchesType" data-provider="roomTypes" finished-at="2025-08-13T12:30:24 IST" duration-ms="239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DELUXE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRoomByType_matchesType -->
        <test-method signature="addRoom_statusCodeIs200()[pri:10, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:24 IST" name="addRoom_statusCodeIs200" finished-at="2025-08-13T12:30:24 IST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRoom_statusCodeIs200 -->
        <test-method signature="addRoom_verifyRoomDetails()[pri:11, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:24 IST" name="addRoom_verifyRoomDetails" finished-at="2025-08-13T12:30:25 IST" duration-ms="408" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [11] but found [10130170111]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [11] but found [10130170111]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.RoomServiceTests.addRoom_verifyRoomDetails(RoomServiceTests.java:148)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRoom_verifyRoomDetails -->
        <test-method signature="addRoom_invalidRoomShouldNotExist_Fail()[pri:12, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:25 IST" name="addRoom_invalidRoomShouldNotExist_Fail" finished-at="2025-08-13T12:30:25 IST" duration-ms="226" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Intentional fail - invalid roomId should not exist expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Intentional fail - invalid roomId should not exist expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at tests.RoomServiceTests.addRoom_invalidRoomShouldNotExist_Fail(RoomServiceTests.java:160)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRoom_invalidRoomShouldNotExist_Fail -->
        <test-method signature="updateRoomPrice_statusCodeIs200()[pri:13, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:25 IST" name="updateRoomPrice_statusCodeIs200" finished-at="2025-08-13T12:30:25 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateRoomPrice_statusCodeIs200 -->
        <test-method signature="updateRoomPrice_verifyUpdatedPriceInResponse()[pri:14, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:25 IST" name="updateRoomPrice_verifyUpdatedPriceInResponse" finished-at="2025-08-13T12:30:25 IST" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateRoomPrice_verifyUpdatedPriceInResponse -->
        <test-method signature="deleteRoomById_statusCodeIs200()[pri:15, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:25 IST" name="deleteRoomById_statusCodeIs200" finished-at="2025-08-13T12:30:26 IST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteRoomById_statusCodeIs200 -->
        <test-method signature="deleteRoomById_verifyRoomIsDeleted()[pri:16, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:26 IST" name="deleteRoomById_verifyRoomIsDeleted" finished-at="2025-08-13T12:30:26 IST" duration-ms="248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteRoomById_verifyRoomIsDeleted -->
        <test-method signature="deleteRoomById_roomStillExists_Fail()[pri:17, instance:tests.RoomServiceTests@1e16c0aa]" started-at="2025-08-13T12:30:26 IST" name="deleteRoomById_roomStillExists_Fail" finished-at="2025-08-13T12:30:26 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteRoomById_roomStillExists_Fail -->
      </class> <!-- tests.RoomServiceTests -->
    </test> <!-- RoomServiceTests -->
  </suite> <!-- APITestSuite -->
</testng-results>
